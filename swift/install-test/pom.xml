<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>swift</artifactId>
        <groupId>edu.mayo.mprc</groupId>
        <version>3.5-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>install-test</artifactId>
    <description>Integration test of the Swift installation</description>

    <properties>
        <!-- Version of Swift we will obtain by unpacking the installer .tar.gz -->
        <unpackedVersion>swift-3.6</unpackedVersion>
        <!-- Where will be the Swift unpacked to -->
        <unpackedDirectory>${project.build.directory}/swift/${unpackedVersion}</unpackedDirectory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <classifier>jdk15</classifier>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>util</artifactId>
            <version>3.5-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>edu.mayo.mprc.swift</groupId>
            <artifactId>swift-config-ui</artifactId>
            <version>3.5-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.gdevelop.syncrpc</groupId>
            <artifactId>syncproxy</artifactId>
            <version>0.3</version>
        </dependency>
        <!-- Make sure we get built after this guy -->
        <dependency>
            <groupId>edu.mayo.mprc</groupId>
            <artifactId>swift-installer</artifactId>
            <version>3.6-SNAPSHOT</version>
            <classifier>install</classifier>
            <type>tar.gz</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>edu.mayo.mprc</groupId>
                                    <artifactId>swift-installer</artifactId>
                                    <version>3.6-SNAPSHOT</version>
                                    <classifier>install</classifier>
                                    <type>tar.gz</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/swift</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/swift</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- This is a hack to directly update the lib folder.
            This is extra useful when doing incremental changes of Swift, in order to quickly
            do integration test on them. Otherwise the full process of building the .tar.gz
            and unpacking it again would need to be invoked.
            This is to be executed manually using mvn -Pcopy-libs
            -->
            <id>copy-libs</id>
            <build>
                <defaultGoal>initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.8</version>
                        <executions>
                            <execution>
                                <id>copy-libs</id>
                                <phase>
                                    initialize
                                </phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${unpackedDirectory}/lib</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>mayo-nexus-public</id>
            <url>http://informatics.mayo.edu/maven/content/repositories/releases/</url>
            <name>Public Mayo Nexus with Mayo-specific releases</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>mayo-nexus-public-snapshots</id>
            <url>http://informatics.mayo.edu/maven/content/repositories/snapshots/</url>
            <name>Public Mayo Nexus with Mayo-specific snapshots</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
