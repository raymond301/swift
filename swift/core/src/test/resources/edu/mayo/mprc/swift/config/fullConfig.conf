# Application configuration
# Supported types:
#     daemon              Daemon
#     database            Swift SQL Database
#     fasta-db            FASTA Database Loader
#     idpqonvert          IdpQonvert
#     idpqonvertCache     IdpQonvert Cache
#     localRunner         Local Runner
#     mascot              Mascot
#     mascotCache         Mascot Cache
#     mascotDeployer      Mascot DB Deployer
#     messageBroker       Message Broker
#     mgf2mgf             Mgf Cleanup
#     mockMascotDeployer  Mock Mascot DB Deployer
#     msconvert           Msconvert
#     msconvertCache      Msconvert Cache
#     msmsEval            MsmsEval
#     msmsEvalCache       MsmsEval Cache
#     myrimatch           MyriMatch
#     myrimatchCache      MyriMatch Cache
#     omssa               Omssa
#     omssaCache          OMSSA Cache
#     omssaDeployer       Omssa DB Deployer
#     ping                Ping Responder
#     qa                  Quality Assurance
#     qstat               SGE Qstat
#     raw2mgf             Extract_msn
#     raw2mgfCache        Extract_msn Cache
#     rawdump             RAW Dump
#     rawdumpCache        RAW Dump Cache
#     scaffold            Scaffold
#     scaffoldDeployer    Scaffold DB Deployer
#     scaffoldReport      Scaffold Report
#     search-db           Search Result Loader
#     searchEngine        Search Engine Reference
#     searcher            Swift Searcher
#     sequest             Sequest
#     sequestCache        Sequest Cache
#     sequestDeployer     Sequest DB Deployer
#     service             Service
#     sgeRunner           Sun Grid Engine Runner
#     tandem              X!Tandem
#     tandemCache         X!Tandem Cache
#     webUi               Swift Website

<messageBroker messageBroker>
        # URL of the broker
        brokerUrl          vm://broker

        # Should we run the embedded broker?
        embedded           true

        # ActiveMQ configuration URL defining how to start the embedded broker up (if embedded)
        embeddedBrokerUrl  vm://broker2

        # Enable JMX on the broker
        useJmx             false
</messageBroker>

<service raw2mgf>
        # Number of threads
        runner.numThreads     2

        # Type of the worker
        runner.workerType     raw2mgf

        # <tt>extract_msn.exe</tt> path
        extractMsnExecutable  ../install/swift/bin/extract_msn/extract_msn.exe

        # Temp folder
        tempFolder            tempFolder

        # Wrapper Script
        wrapperScript         wineconsole

        # X Window Wrapper Script
        xvfbWrapperScript     ../install/swift/bin/util/unixXvfbWrapper.sh
</service>

<service msconvert>
        # Number of threads
        runner.numThreads    3

        # Type of the worker
        runner.workerType    msconvert

        # <tt>msaccess.exe</tt> path
        msaccessExecutable   run_msaccess.sh

        # <tt>msconvert.exe</tt> path
        msconvertExecutable  run_msconvert.sh
</service>

<service mgfToMgf>
        # Number of threads
        runner.numThreads  3

        # Type of the worker
        runner.workerType  mgf2mgf
</service>

<service rawDump>
        # Number of threads
        runner.numThreads  3

        # Type of the worker
        runner.workerType  rawdump
</service>

<service mascot>
        # Type of the worker
        runner.workerType  mascot

        # URL
        mascotUrl          http://localhost/mascot/
</service>

<service mascotDeployer>
        # Type of the worker
        runner.workerType       mascotDeployer

        # Database Index Folder
        deployableDbFolder      ../install/swift/var/fasta/

        # Mascot Installation Folder
        engineRootFolder        engineRootFolder

        # Mascot Database Maintenance Url
        mascotDbMaintenanceUri  mascotDbMaintenanceUrl
</service>

<service sequest>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  sequest

        # PVM Host List File
        pvmHosts           pvmHosts

        # Sequest Command
        sequestCommand     sequestCommand
</service>

<service sequestDeployer>
        # Number of threads
        runner.numThreads   2

        # Type of the worker
        runner.workerType   sequestDeployer

        # Database Folder
        deployableDbFolder  deployableDbFolder

        # Makedb Folder
        engineRootFolder    engineRootFolder

        # Wine Wrapper Script
        wineWrapperScript   wineWrapperScript
</service>

<service tandem>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  tandem

        # Executable Path
        tandemExecutable   tandemExecutable
</service>

<service omssa>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  omssa

        # CL
        omssaclPath        omssacl
</service>

<service omssaDeployer>
        # Number of threads
        runner.numThreads   2

        # Type of the worker
        runner.workerType   omssaDeployer

        # Database Index Folder
        deployableDbFolder  ../install/swift/var/fasta/deployableDbFolder

        # Database Format Executable
        formatDbExe         formatDbExe
</service>

<service scaffold>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  scaffold
</service>

<service scaffoldDeployer>
        # Type of the worker
        runner.workerType   scaffoldDeployer

        # Database Folder
        deployableDbFolder  deployableDbFolder
</service>

<service scaffoldReport>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  scaffoldReport
</service>

<service qa>
        # Number of threads
        runner.numThreads  3

        # Type of the worker
        runner.workerType  qa

        # <tt>R script</tt> path
        rScript            rScript

        # X Window Wrapper Script
        xvfbWrapperScript  xvfbWrapperScript
</service>

<service msmsEval>
        # Number of threads
        runner.numThreads   2

        # Type of the worker
        runner.workerType   msmsEval

        # Executable Path
        msmsEvalExecutable  msmsEval

        # Parameter files for msmsEval
        paramFiles          test,test.txt
</service>

<service searcher>
        # Type of the worker
        runner.workerType  searcher

        fastaPath          fastaPath
        fastaArchivePath   fastaArchivePath
        fastaUploadPath    fastaUploadPath
        raw2mgf            raw2mgf
        msconvert          msconvert
        mgf2mgf            mgfToMgf
        rawdump            rawDump
        engine.1.code      MASCOT
        engine.1.version   2.4
        engine.1.worker    mascot
        engine.1.deployer  mascotDeployer
        engine.2.code      SEQUEST
        engine.2.version   v27
        engine.2.worker    sequest
        engine.2.deployer  sequestDeployer
        engine.3.code      TANDEM
        engine.3.version   2013.2.01
        engine.3.worker    tandem
        engine.3.deployer
        engine.4.code      OMSSA
        engine.4.version   0.1
        engine.4.worker    omssa
        engine.4.deployer  omssaDeployer
        engine.5.code      SCAFFOLD
        engine.5.version   2.6.0
        engine.5.worker    scaffold
        engine.5.deployer  scaffoldDeployer
        scaffoldReport     scaffoldReport
        qa                 qa
        fastaDb
        searchDb
        msmsEval           msmsEval
        database
        reportDecoyHits    true
</service>

<service qstat>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  qstat
</service>

<webUi _webUi_1>
        searcher            searcher
        title               Swift 2.5
        port                8080
        browseRoot          C:\\
        browseWebRoot       file:///C:/
        qstat               qstat
        databaseUndeployer
</webUi>

<service mockMascotDeployer>
        # Number of threads
        runner.numThreads  2

        # Type of the worker
        runner.workerType  mockMascotDeployer
</service>

<daemon main>
        # Host the daemon runs on
        hostName

        # Host system operating system name: e.g. Windows or Linux.
        osName

        # Host system architecture: x86, x86_64
        osArch

        # Directory on a shared file system can be accessed from all the daemons
        sharedFileSpacePath

        # Temporary folder that can be used for caching. Transferred files from other daemons with no shared file system with this daemon are cached to this folder.
        tempFolderPath

        # Not implemented yet
        dumpErrors           false

        # Not implemented yet
        dumpFolderPath

        # Shared log folder to be used as a default for all services
        logOutputFolder      var/log

        # Comma separated list of provided resources
        resources            messageBroker, _webUi_1

        # Comma separated list of provided services
        services             mascot, mascotDeployer, omssa, omssaDeployer, sequest, sequestDeployer, tandem, scaffold, scaffoldReport, qa, scaffoldDeployer, msmsEval, raw2mgf, msconvert, mockMascotDeployer, qstat, mgfToMgf, rawDump, searcher
</daemon>