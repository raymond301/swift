# Application configuration
# Supported types:
#     daemon              Daemon
#     database            Swift SQL Database
#     fasta-db            FASTA Database Loader
#     idpqonvert          IdpQonvert
#     idpqonvertCache     IdpQonvert Cache
#     localRunner         Local Runner
#     mascot              Mascot
#     mascotCache         Mascot Cache
#     mascotDeployer      Mascot DB Deployer
#     messageBroker       Message Broker
#     mgf2mgf             Mgf Cleanup
#     mockMascotDeployer  Mock Mascot DB Deployer
#     msconvert           Msconvert
#     msconvertCache      Msconvert Cache
#     msmsEval            MsmsEval
#     msmsEvalCache       MsmsEval Cache
#     myrimatch           MyriMatch
#     myrimatchCache      MyriMatch Cache
#     omssa               Omssa
#     omssaCache          OMSSA Cache
#     omssaDeployer       Omssa DB Deployer
#     ping                Ping Responder
#     qa                  Quality Assurance
#     qstat               SGE Qstat
#     raw2mgf             Extract_msn
#     raw2mgfCache        Extract_msn Cache
#     rawdump             RAW Dump
#     rawdumpCache        RAW Dump Cache
#     scaffold            Scaffold
#     scaffoldDeployer    Scaffold DB Deployer
#     scaffoldReport      Scaffold Report
#     search-db           Search Result Loader
#     searchEngine        Search Engine Reference
#     searcher            Swift Searcher
#     sequest             Sequest
#     sequestCache        Sequest Cache
#     sequestDeployer     Sequest DB Deployer
#     service             Service
#     sgeRunner           Sun Grid Engine Runner
#     tandem              X!Tandem
#     tandemCache         X!Tandem Cache
#     webUi               Swift Website

<messageBroker messageBroker>
        brokerUrl          vm://broker  # URL of the broker
        embedded           true         # Should we run the embedded broker?
        embeddedBrokerUrl  vm://broker  # ActiveMQ configuration URL defining how to start the embedded broker up (if embedded)
        useJmx             false        # Enable JMX on the broker
</messageBroker>

<service raw2mgf>
        runner.numThreads     2                                                 # Number of threads
        runner.workerType     raw2mgf                                           # Type of the worker
        extractMsnExecutable  ../install/swift/bin/extract_msn/extract_msn.exe  # <tt>extract_msn.exe</tt> path
        tempFolder            tempFolder                                        # Temp folder
        wrapperScript         wineconsole                                       # Wrapper Script
        xvfbWrapperScript     ../install/swift/bin/util/unixXvfbWrapper.sh      # X Window Wrapper Script
</service>

<service msconvert>
        runner.numThreads    3                 # Number of threads
        runner.workerType    msconvert         # Type of the worker
        msaccessExecutable   run_msaccess.sh   # <tt>msaccess.exe</tt> path
        msconvertExecutable  run_msconvert.sh  # <tt>msconvert.exe</tt> path
</service>

<service mgfToMgf>
        runner.numThreads  3        # Number of threads
        runner.workerType  mgf2mgf  # Type of the worker
</service>

<service rawDump>
        runner.numThreads  3        # Number of threads
        runner.workerType  rawdump  # Type of the worker
</service>

<service mascot>
        runner.workerType  mascot                    # Type of the worker
        mascotUrl          http://localhost/mascot/  # URL
</service>

<service mascotDeployer>
        runner.workerType       mascotDeployer               # Type of the worker
        deployableDbFolder      ../install/swift/var/fasta/  # Database Index Folder
        engineRootFolder        engineRootFolder             # Mascot Installation Folder
        mascotDbMaintenanceUri  mascotDbMaintenanceUrl       # Mascot Database Maintenance Url
</service>

<service sequest>
        runner.numThreads  2               # Number of threads
        runner.workerType  sequest         # Type of the worker
        pvmHosts           pvmHosts        # PVM Host List File
        sequestCommand     sequestCommand  # Sequest Command
</service>

<service sequestDeployer>
        runner.numThreads   2                   # Number of threads
        runner.workerType   sequestDeployer     # Type of the worker
        deployableDbFolder  deployableDbFolder  # Database Folder
        engineRootFolder    engineRootFolder    # Makedb Folder
        wineWrapperScript   wineWrapperScript   # Wine Wrapper Script
</service>

<service tandem>
        runner.numThreads  2                 # Number of threads
        runner.workerType  tandem            # Type of the worker
        tandemExecutable   tandemExecutable  # Executable Path
</service>

<service omssa>
        runner.numThreads  2        # Number of threads
        runner.workerType  omssa    # Type of the worker
        omssaclPath        omssacl  # CL
</service>

<service omssaDeployer>
        runner.numThreads   2                                              # Number of threads
        runner.workerType   omssaDeployer                                  # Type of the worker
        deployableDbFolder  ../install/swift/var/fasta/deployableDbFolder  # Database Index Folder
        formatDbExe         formatDbExe                                    # Database Format Executable
</service>

<service scaffold>
        runner.numThreads  2         # Number of threads
        runner.workerType  scaffold  # Type of the worker
</service>

<service scaffoldDeployer>
        runner.workerType   scaffoldDeployer    # Type of the worker
        deployableDbFolder  deployableDbFolder  # Database Folder
</service>

<service scaffoldReport>
        runner.numThreads  2               # Number of threads
        runner.workerType  scaffoldReport  # Type of the worker
</service>

<service qa>
        runner.numThreads  3                  # Number of threads
        runner.workerType  qa                 # Type of the worker
        rScript            rScript            # <tt>R script</tt> path
        xvfbWrapperScript  xvfbWrapperScript  # X Window Wrapper Script
</service>

<service msmsEval>
        runner.numThreads   2              # Number of threads
        runner.workerType   msmsEval       # Type of the worker
        msmsEvalExecutable  msmsEval       # Executable Path
        paramFiles          test,test.txt  # Parameter files for msmsEval
</service>

<service searcher>
        runner.workerType  searcher          # Type of the worker
        fastaPath          fastaPath
        fastaArchivePath   fastaArchivePath
        fastaUploadPath    fastaUploadPath
        raw2mgf            raw2mgf
        msconvert          msconvert
        mgf2mgf            mgfToMgf
        rawdump            rawDump
        engine.1.code      MASCOT
        engine.1.version   2.4
        engine.1.worker    mascot
        engine.1.deployer  mascotDeployer
        engine.2.code      SEQUEST
        engine.2.version   v27
        engine.2.worker    sequest
        engine.2.deployer  sequestDeployer
        engine.3.code      TANDEM
        engine.3.version   2013.2.01
        engine.3.worker    tandem
        engine.3.deployer
        engine.4.code      OMSSA
        engine.4.version   0.1
        engine.4.worker    omssa
        engine.4.deployer  omssaDeployer
        engine.5.code      SCAFFOLD
        engine.5.version   2.6.0
        engine.5.worker    scaffold
        engine.5.deployer  scaffoldDeployer
        scaffoldReport     scaffoldReport
        qa                 qa
        fastaDb
        searchDb
        msmsEval           msmsEval
        database
        reportDecoyHits    true
</service>

<service qstat>
        runner.numThreads  2      # Number of threads
        runner.workerType  qstat  # Type of the worker
</service>

<webUi _webUi_1>
        searcher            searcher
        title               Swift 2.5
        port                8080
        browseRoot          C:\\
        browseWebRoot       file:///C:/
        qstat               qstat
        databaseUndeployer
</webUi>

<service mockMascotDeployer>
        runner.numThreads  2                   # Number of threads
        runner.workerType  mockMascotDeployer  # Type of the worker
</service>

<daemon main>
        hostName                                      # Host the daemon runs on
        osName                                        # Host system operating system name: e.g. Windows or Linux.
        osArch                                        # Host system architecture: x86, x86_64
        sharedFileSpacePath                           # Directory on a shared file system can be accessed from all the daemons
        tempFolderPath                                # Temporary folder that can be used for caching. Transferred files from other daemons with no shared file system with this daemon are cached to this folder.
        dumpErrors           false                    # Not implemented yet
        dumpFolderPath                                # Not implemented yet
        logOutputFolder      var/log                  # Shared log folder to be used as a default for all services
        resources            messageBroker, _webUi_1  # Comma separated list of provided resources
        services             mascot, mascotDeployer, omssa, omssaDeployer, sequest, sequestDeployer, tandem, scaffold, scaffoldReport, qa, scaffoldDeployer, msmsEval, raw2mgf, msconvert, mockMascotDeployer, qstat, mgfToMgf, rawDump, searcher  # Comma separated list of provided services
</daemon>
